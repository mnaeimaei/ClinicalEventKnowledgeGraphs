        MATCH ( d : Disorder ) WHERE d.potentialEntity="disorder"
        MATCH ( d ) <-[:BOND]- ( e )
        WITH d , e as nodes ORDER BY e.timestamp,ID(e)
        WITH d , collect ( nodes ) as nodeList
        UNWIND range(0,size(nodeList)-2) AS i
        WITH d , nodeList[i] as first, nodeList[i+1] as second, d.Icd_code_Short as NewID
        MERGE ( first ) -[df:DF {EntityType:"disorder"} ]->( second )
        ON CREATE SET df.ID=NewID;


MATCH ( c1 : Class ) <-[:OBSERVED]- ( e1 : Event ) -[df:DF]-> ( e2 : Event ) -[:OBSERVED]-> ( c2 : Class )
MATCH (e1) -[:BOND] -> (d) <-[:BOND]- (e2)
WHERE c1.Type = c2.Type AND d.potentialEntity = df.EntityType AND d.Icd_code_Short = df.ID  AND d.potentialEntity ="disorder"  
WITH d.potentialEntity as EType,c1,count(df) AS df_freq,c2, d.Icd_code_Short as IDT
MERGE ( c1 ) -[rel2:DF_C {EntityType:"Absolute" , count:df_freq , En1_ID:IDT , En1:"disorder" , En2:"disorder" }]-> ( c2 );






